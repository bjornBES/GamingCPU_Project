.section TEXT

$VideoCard              = 0x02
$BootableDriveNumber = 0xAA55

.SETCPU "BC16"

_BIOSStart:
    sez     SS                                  ; SS = 0
    mov     SP,             @__START_STACK__    ; SP = @Stack

    sez     A
    mov     AL,             CR0
    or      A,              0x11
    mov     CR0,            AL

    mov     HL,             @StartMSG
    mov     C,              @StartMSGLength
    sez     B
    call    [PrintStr]

OtherBIOS:
    outw    %VideoCard,     0x8001              ; _outputIndex = 0
    outw    %VideoCard,     0x0010              ; video cammand Get res
    inpw    %VideoCard,     A                   ; getting screen resolution height
    mov     [ScreenHeight], A                   ; 
    inpw    %VideoCard,     A                   ; getting screen resolution width
    mov     [ScreenWidth],  A                   ;
    
    call    [InitBuffer]

    movd    [_INT2h],       far @BreakPoint
    movd    [_InvalidIns],  far @Error_Invalid_Instruction
    movd    [_IRQ0],        far @KeyBoardIRQ
    ; movd    [_IRQ15],       far @FloppyInterruptHandler
    movd    [_INT10h],      far @BIOS_Interrupt10h
    movd    [_INT13h],      far @BIOS_Interrupt13h
    
    sei

    int     0x02

    ; this function will use the DL register as the disk index
    sez     D

FindBootDiskLoop:
    call    [InitializeDrive]

    cmp     [IsF12],        0x01                ; IsF12 == 1
    je      [ShowBIOS]                          ; yes

SetArguments:
    mov     A,              1                   ; A = 1
    push    A                                   ; uint16_t sector = 1
    sez     A                                   ; A = 0
    push    A                                   ; uint16_t track = 0
    push    A                                   ; uint16_t head = 0
    mov     HL,             far @__BOOTLOADER
    push    D                                   ; uint16_t drive
    push    L                                   ; Far uint8_t* LOW data
    push    H                                   ; Far uint8_t* HIGH data
    call    [Read_Sector]

    mov     A,              R1
    cmp     AL,             1
    jne     [FindBootDiskLoop]

    mov     A,              [@__BOOTLOADER + 510]
    cmp     A,              %BootableDriveNumber
    je      [Exit_FindDiskLoop]
    inc     DL
    cmp     DL,             4   
    jne     [FindBootDiskLoop]
    mov     HL,             @Error_Invalid_BootDisk_Str
    mov     C,              @Error_Invalid_BootDisk_StrLength
    jmp     [Error_Invalid_BootDisk]
Exit_FindDiskLoop:
    mov     [DriveNumber],  DL

    int     0x02

EndOfBIOS:

    mov     HL,             far @INFOMSG_FoundBootableDisk
    mov     C,              @INFOMSG_FoundBootableDiskLength
    sez     B
    call    [PrintStr]

    mov     AL,             DL
    add     AL,             '0'
    call    [COut]

    nop

    sez     A
    mov     AL,             CR0
    xor     A,              0x11
    mov     CR0,            AL

    mov     DL,             [DriveNumber]

    mov     HL,             far @__BOOTLOADER
    halt
    jmp     [HL]

    ; not comming back

ShowBIOS:
    
BreakPoint:
    sez     B
    mov     [Cursorx],      B
    mov     [Cursory],      B
    mov     H,              HIGH @BreakPointMSG
    mov     L,              LOW @BreakPointMSG
    mov     C,              @BreakPointMSGLength
    call    [PrintStr]

    nop

BreakpointLoop:
    call    [BufferSize]                                            ; get keyboard buffer size
    cmp     A,              0                                       ; A <= 0
    jle     [BreakpointLoop]                                        ; yes
    call    [ReadBuffer]                                            ; nope read the key
    cmp     AL,             'C'                                     ; AL == C
    jne     [BreakpointLoop]                                        ; no
    push    BL
    mov     AL,             'D'
    push    AL
    call    [COut]
    reti                                                            ; return

.section BSS

__START_STACK__:
.res 0x200

.includeil "./BIOS_errors.acl"
.includeil "./IOFunctions.acl"
.includeil "./Keyboard.acl"

.includeil "./BIOS_Interrupt_Pointer.acl"

.section Bootloader

.section BSS

DriveNumber:
.resb
ReceivedIRQ:
.resb
IsF12:
.resb
Cursorx:
.resw
Cursory:
.resw
EReg:
.resd
ScreenHeight:
.resw
ScreenWidth:
.resw
KeyBoardChar:
.resb

.section DATA

.section RODATA
BreakPointMSG:
.db "Breakpoint\n"
.db "press C", 0
BreakPointMSGEnd:
BreakPointMSGLength:
.dw @BreakPointMSGEnd - @BreakPointMSG

StartMSG:
.db "BIOS"
StartMSGEnd:
StartMSGLength:
.dw @StartMSGEnd - @StartMSG - 1

Error_Invalid_BootDisk_Str:
.db "Can't find a bootable disk", 0
Error_Invalid_BootDisk_Strend:
Error_Invalid_BootDisk_StrLength:
.dw @Error_Invalid_BootDisk_Strend - @Error_Invalid_BootDisk_Str

INFOMSG_FoundBootableDisk:
.db 0xA, "Found drive: "
INFOMSG_FoundBootableDiskEnd:
INFOMSG_FoundBootableDiskLength:
.dw @INFOMSG_FoundBootableDiskEnd - @INFOMSG_FoundBootableDisk
