ENTRY(_BIOSStart)
OUTPUTFORMAT("binary")
address = 0x1200
MAP("./src/BIOS/BIOSMAP.map")

MEMORY
{
    INT2h:      start = 0x0004, size = 0x0004,  type = RW
    InvalidIns: start = 0x0018, size = 0x0004,  type = RW
    IRQ0:       start = 0x0040, size = 0x0004,  type = RW
    IRQ1:       start = 0x0044, size = 0x0004,  type = RW
    IRQ15:      start = 0x007C, size = 0x0004,  type = RW
    INT10h:     start = 0x0090, size = 0x0004,  type = RW
    INT13h:     start = 0x0094, size = 0x0004,  type = RW
    CODE:       start = 0x1200, size = 0x6A00,  type = RW
    BOOTLOADER: start = 0x7C00, size = 0x0200,  type = RW
    STACK:      start = 0x7E00, size = 0x0200,  type = RW
    VAR:        start = 0x8000, size = 0x0E00,  type = RW
    DATA:       start = 0x9000, size = 0x5000,  type = RW
    RODATA:     start = 0xE000, size = 0x2000,  type = RO
}

SECTIONS
{
    INT2h:      load = INT2h,       start-symbol = _INT2h
    InvalidIns: load = InvalidIns,  start-symbol = _InvalidIns
    IRQ0:       load = IRQ0,        start-symbol = _IRQ0
    IRQ1:       load = IRQ1,        start-symbol = _IRQ1
    IRQ15:      load = IRQ15,       start-symbol = _IRQ15
    INT10h:     load = INT10h,      start-symbol = _INT10h
    INT13h:     load = INT13h,      start-symbol = _INT13h
    TEXT:       load = CODE,        start-symbol = __CODE,          file = "%O"
    Bootloader: load = BOOTLOADER,  start-symbol = __BOOTLOADER
    Stack:      load = STACK,       start-symbol = __STACK,         end-symbol = __ENDSTACK
    BSS:        load = VAR,         start-symbol = __STARTBSS,      end-symbol = __ENDBSS
    DATA:       load = DATA,        start-symbol = __STARTDATA,     end-symbol = __ENDDATA, file = "%O"
    RODATA:     load = RODATA,      start-symbol = __STARTRODATA,   end-symbol = __ENDRODATA, file = "%O"
}
