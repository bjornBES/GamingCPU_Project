.section TEXT
.org 0x0

_000002: ; add(IN ushort a, IN ushort b) 
	; _a with 2 bytes
	; _b with 2 bytes
_add:
	push bp
	pushr

_000003: ;     return (a + b) 
	mov AX, [BP + 2]
	push AX

	mov AX, [BP + 0]
	push AX

	pop AX
	pop BX
	add AX, BX
	push AX

	pop AX
	mov R1, AX
	jmp [_END_add]

_000004: ; end add
	mov R1, 0
	_END_add:
	popr
	pop bp
	ret 2

_000006: ; main(IN byte BootDisk) : public
	; _BootDisk with 1 bytes
.global _main:
	push bp
	pushr

_000007: ;     ushort expr = (10 + 2)
	mov AX, 0x2
	push AX

	mov AX, 0xa
	push AX

	pop AX
	pop BX
	add AX, BX
	push AX

	; _expr with 2 bytes
	pop AX
	mov DS, 0x00ef
	mov	word [DS:0x8000], AX

_000008: ;     ushort expr2 = (20 * 2 + 20)
	mov AX, 0x14
	push AX

	mov AX, 0x2
	push AX

	mov AX, 0x14
	push AX

	pop AX
	pop BX
	mul AX, BX
	push AX

	pop AX
	pop BX
	add AX, BX
	push AX

	; _expr2 with 2 bytes
	pop AX
	mov	word [DS:0x8002], AX

_00000a: ;     int name = 0
	mov AX, 0x0
	push AX

	; _name with 4 bytes
	pop AX
	mov	dword [DS:0x8004], AX

_00000b: ;     ushort inBSS
	; _inBSS with 2 bytes at DS:0x8008

_00000c: ;     ushort A = 0x8000
	mov AX, 0x8000
	push AX

	; _A with 2 bytes
	pop AX
	mov	word [DS:0x800a], AX

_00000e: ;     inBSS = 10
	mov AX, 0xa
	push AX

	pop AX
	mov	word [DS:0x8008], AX

_000010: ;     ushort test1 = add(10, 20)
	mov AX, 0xa
	push AX

	pop AX
	pusha AX
	mov AX, 0x14
	push AX

	pop AX
	pusha AX
	call [_add]
	mov AX, R1
	; _test1 with 2 bytes
	mov	word [DS:0x800c], AX

_000011: ;     ushort test2 = add(inBSS, 20)
	pusha [DS:0x8008]
	mov AX, 0x14
	push AX

	pop AX
	pusha AX
	call [_add]
	mov AX, R1
	; _test2 with 2 bytes
	mov	word [DS:0x800e], AX

_000013: ;     string str = "Hello world"
	; _str with 11 bytes
	mov	 [DS:0x8010], @_str_0000

_000014: ;     char[11] strc = "Hello world"
	; _strc with 12 bytes
	mov	 [DS:0x801b], @_str_0000

_000015: ;     char[256] carr
	; _carr with 257 bytes at DS:0x8027

_000017: ;     char[0x8000] s = "Hello world"
	; _s with 32769 bytes
	mov	 [DS:0x8128], @_str_0000

_000019: ;     pointer stringP = &str
	; _stringP with 3 bytes
	inc DS
	mov	tbyte [DS:0x129], [DS:0x8010]

_00001a: ;     stringP = &strc
	dec DS
	inc DS
	mov	tbyte [DS:0x129], [DS:0x801b]

_00001c: ;     inBSS = 20
	mov AX, 0x14
	push AX

	dec DS
	pop AX
	mov	word [DS:0x8008], AX

_00001e: ;     return 0
	mov AX, 0x0
	push AX

	pop AX
	mov R1, AX
	jmp [_END_main]

_00001f: ; end main
	mov R1, 0
	_END_main:
	popr
	pop bp
	; _expr at DS:0x8000
	mov word [DS:0x8000], 0
	; _expr2 at DS:0x8002
	mov word [DS:0x8002], 0
	; _name at DS:0x8004
	mov dword [DS:0x8004], 0
	; _inBSS at DS:0x8008
	mov word [DS:0x8008], 0
	; _A at DS:0x800a
	mov word [DS:0x800a], 0
	; _test1 at DS:0x800c
	mov word [DS:0x800c], 0
	; _test2 at DS:0x800e
	mov word [DS:0x800e], 0
	; _str at DS:0x8010
	mov  [DS:0x8010], 0
	; _strc at DS:0x801b
	mov  [DS:0x801b], 0
	; _carr at DS:0x8027
	mov  [DS:0x8027], 0
	; _s at DS:0x8128
	mov  [DS:0x8128], 0
	; _stringP at DS:0x129
	mov tbyte [DS:0x129], 0
	ret 1

.section DATA

.section RDATA
_str_0000:
.db "Hello world",0

.section BSS

.org 0x0
